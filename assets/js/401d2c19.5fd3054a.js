"use strict";(self.webpackChunkvelero_docs=self.webpackChunkvelero_docs||[]).push([[103],{1942:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>n,metadata:()=>o,toc:()=>a});var i=r(4848),s=r(8453);const n={sidebar_label:"Single cluster",sidebar_position:10},c="Software Architecture",o={id:"guide/Software-Architecture/single-cluster",title:"Software Architecture",description:"Single cluster",source:"@site/docs/20-guide/10-Software-Architecture/10-single-cluster.md",sourceDirName:"20-guide/10-Software-Architecture",slug:"/guide/Software-Architecture/single-cluster",permalink:"/docs/guide/Software-Architecture/single-cluster",draft:!1,unlisted:!1,editUrl:"https://github.com/seriohub/velero-docs/blob/main/docs/20-guide/10-Software-Architecture/10-single-cluster.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_label:"Single cluster",sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/guide/Software-Architecture/overview"},next:{title:"Multi-cluster",permalink:"/docs/guide/Software-Architecture/multi-cluster"}},l={},a=[{value:"Single cluster",id:"single-cluster",level:2}];function u(e){const t={h1:"h1",h2:"h2",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"software-architecture",children:"Software Architecture"}),"\n",(0,i.jsx)(t.h2,{id:"single-cluster",children:"Single cluster"}),"\n",(0,i.jsx)(t.p,{children:"In a single cluster installation, all components are deployed within that one cluster."}),"\n",(0,i.jsx)(t.p,{children:"The software architecture of the VUI project is organized into the following layers:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Presentation Layer (VUI-UI)"}),": This layer manages the web interface that is displayed to users."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Logical Layer (VUI-API and VUI-Watchdog)"}),": This layer processes all user requests made through the graphical interface, interacts with the Velero engine, and sends notifications when events occur."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Each element of the project is developed as a indipendent service"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"software-architecture-sc",src:r(6822).A+"",width:"2343",height:"1722"})})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},6822:(e,t,r)=>{r.d(t,{A:()=>i});const i=r.p+"assets/images/20_sa_VUI-f4e9c72e449d0f5ba483b36750f0e79e.png"},8453:(e,t,r)=>{r.d(t,{R:()=>c,x:()=>o});var i=r(6540);const s={},n=i.createContext(s);function c(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(n.Provider,{value:t},e.children)}}}]);